
import java.awt.*;
import java.math.BigInteger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author pedja
 */
public class LLRTGUI extends javax.swing.JFrame {

    /**
     * Creates new form LLRTGUI
     */
    public LLRTGUI() {
        initComponents();
        setIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        kLabel = new javax.swing.JLabel();
        pLabel = new javax.swing.JLabel();
        nLabel = new javax.swing.JLabel();
        kTextField = new javax.swing.JTextField();
        pTextField = new javax.swing.JTextField();
        nTextField = new javax.swing.JTextField();
        checkButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        resultLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("LLRT");
        setResizable(false);

        buttonGroup.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("4kp^n-1");

        buttonGroup.add(jRadioButton2);
        jRadioButton2.setText("4kp^n+1");

        kLabel.setText("k :");

        pLabel.setText("p :");

        nLabel.setText("n :");

        checkButton.setText("Check");
        checkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkButtonActionPerformed(evt);
            }
        });

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        resultLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        resultLabel.setMaximumSize(new java.awt.Dimension(108, 17));
        resultLabel.setMinimumSize(new java.awt.Dimension(108, 17));
        resultLabel.setPreferredSize(new java.awt.Dimension(108, 17));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(checkButton)
                        .addGap(18, 18, 18)
                        .addComponent(clearButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 184, Short.MAX_VALUE)
                        .addComponent(closeButton)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton2)
                            .addComponent(jRadioButton1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addComponent(kLabel))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(nLabel)
                                            .addComponent(pLabel))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(nTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                                            .addComponent(pTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(kTextField, javax.swing.GroupLayout.Alignment.LEADING)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(resultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {checkButton, clearButton, closeButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kLabel)
                    .addComponent(kTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pLabel)
                    .addComponent(pTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nLabel)
                    .addComponent(nTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(resultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkButton)
                    .addComponent(clearButton)
                    .addComponent(closeButton))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        resultLabel.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkButtonActionPerformed
        // TODO add your handling code here:
        Object source =evt.getSource();
        if (source.equals(checkButton))
        {
            BigInteger sgn=BigInteger.ONE;
            BigInteger k,p, n;
            resultLabel.setText("");
            k=BigInteger.valueOf(Integer.parseInt(kTextField.getText()));
            p=BigInteger.valueOf(Integer.parseInt(pTextField.getText()));
            n=BigInteger.valueOf(Integer.parseInt(nTextField.getText()));
            int e = (int)n.doubleValue();
            
             if(!p.isProbablePrime(10))
    {
    JOptionPane.showMessageDialog(null, "Тhe value of p must be a prime number.");
    pTextField.setText("");
    
    }
    else if (k.multiply(BigInteger.valueOf(4)).compareTo(BigInteger.valueOf(2).pow(e))==1 || k.multiply(BigInteger.valueOf(2)).compareTo(BigInteger.valueOf(2).pow(e))==0 )
    {
    JOptionPane.showMessageDialog(null, "Тhe value of 4k must be less than 2^exponent.");
    kTextField.setText("");
    }
     else if ( e<3 )
    {
    JOptionPane.showMessageDialog(null, "Тhe value of n must be greater than 2.");
    nTextField.setText("");   
        
    }
    else {
         if(jRadioButton1.isSelected()){
           sgn=sgn.negate();  
         }
         else if(jRadioButton2.isSelected()){
             sgn=sgn;
         }
    
    
    BigInteger f = k.multiply(BigInteger.valueOf(4)).multiply(p.pow(e)).add(sgn);
	
	Mersenne mersenne = new Mersenne();
	
	if (mersenne.primep(f,k.multiply(BigInteger.valueOf(4)).intValue(),p.intValue(),n.intValue(),sgn.intValue())) {
                            
if(sgn.intValue()==-1){
    resultLabel.setText(k.multiply(BigInteger.valueOf(4))+"*"+p+"^"+n+"-1 is prime");
}
else{
    resultLabel.setText(k.multiply(BigInteger.valueOf(4))+"*"+p+"^"+n+"+1 is prime");
}
    
    } else {
    
    if(sgn.intValue()==-1){
    resultLabel.setText(k.multiply(BigInteger.valueOf(4))+"*"+p+"^"+n+"-1 is composite");
}
else{
    resultLabel.setText(k.multiply(BigInteger.valueOf(4))+"*"+p+"^"+n+"+1 is composite");
}
    
    }
    }
        }
    }//GEN-LAST:event_checkButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        kTextField.setText("");
        pTextField.setText("");
        nTextField.setText("");
        resultLabel.setText("");
    }//GEN-LAST:event_clearButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_closeButtonActionPerformed

    static class Mersenne {
    
    int sv;

    

    public  BigInteger poly(int M , BigInteger x) {
       
		
		BigInteger p,p0,p1;
		int l;
		
		p=BigInteger.valueOf(sv);
		p0=BigInteger.valueOf(2);
		p1=x;
		l=2;
		
		while(l<=M) {
			p=x.multiply(p1).subtract(p0);
			p0=p1;
			p1=p;
			l=l+1;
			
		}
		return p;

    }
    
    public int computeJacobiSymbol(BigInteger initial_a, BigInteger n) {
        // Step 1: a = a mod n
        BigInteger a = initial_a.mod(n);
        // Step 2: if a = 1 or n = 1 return 1
        if (a.equals(BigInteger.ONE) || n.equals(BigInteger.ONE)) {
            return 1;
        }
        // Step 3: if a = 0 return 0
        if (a.equals(BigInteger.ZERO)) {
            return 0;
        }
        // Step 4: define e and a_1 such that a = 2^e * a_1 where a_1 is odd
        int e = 0;
        BigInteger a_1 = a;
        while (a_1.remainder(BigInteger.valueOf(2)).equals(BigInteger.ZERO)) {
            e++;
            a_1 = a_1.divide(BigInteger.valueOf(2));
        }
        // Step 5: if e is even, then s = 1;
        //          else if n mod 8 = 1 or n mod 8 = 7, then s = 1
        //          else if n mod 8 = 3 or n mod 8 = 5, then s = -1
        int s;
        if (e % 2 == 0) {
            s = 1;
        } else {
            BigInteger n_mod_eight = n.mod(BigInteger.valueOf(8));
            if (n_mod_eight.equals(BigInteger.ONE) || n_mod_eight.equals(BigInteger.valueOf(7))) {
                s = 1;
            } else { // n_mod_eight.equals(THREE) || n_mod_eight.equals(FIVE)
                s = -1;
            }
        }
        // Step 6: if n mod 4 = 3 and a_1 mod 4 = 3, then s = -s
        if (n.mod(BigInteger.valueOf(4)).equals(BigInteger.valueOf(3)) && a_1.mod(BigInteger.valueOf(4)).equals(BigInteger.valueOf(3))) {
            s = -s;
        }
        // Step 7: n_1 = n mod a_1
        BigInteger n_1 = n.mod(a_1);
        // Step 8: return s * JacobiSymbol(n_1, a_1)
        return s * computeJacobiSymbol(n_1, a_1);
		
    }
    
     public boolean primep(BigInteger g ,int l, int a, int m,int sgn)
    {
       
        sv=3;
        while (!(computeJacobiSymbol(BigInteger.valueOf(sv-2),g)==-1*sgn && computeJacobiSymbol(BigInteger.valueOf(sv+2),g)==-1))
        {
          sv++;
        }
        int c=(l*a*a)/4;
        BigInteger s;
        double t=m;
        int ub=(int)t-2;
        s = poly(c, BigInteger.valueOf(sv)).mod(g);
        for(int i=1 ; i<=ub;i++){
            s=poly(a,s).mod(g);
        }

        return(s.equals(BigInteger.ZERO));
            
    }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LLRTGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LLRTGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LLRTGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LLRTGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LLRTGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JButton checkButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton closeButton;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JLabel kLabel;
    private javax.swing.JTextField kTextField;
    private javax.swing.JLabel nLabel;
    private javax.swing.JTextField nTextField;
    private javax.swing.JLabel pLabel;
    private javax.swing.JTextField pTextField;
    private javax.swing.JLabel resultLabel;
    // End of variables declaration//GEN-END:variables

private void setIcon(){
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("llrt.png")));
    }
}
